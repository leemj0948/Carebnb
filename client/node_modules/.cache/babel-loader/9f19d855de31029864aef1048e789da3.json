{"ast":null,"code":"var _jsxFileName = \"C:\\\\Developing\\\\portfolios\\\\bnb_clone\\\\client\\\\src\\\\payment\\\\CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport BillingDetailsFields from './BillingDetailForm';\nimport axios from 'axios';\nimport styled from 'styled-components'; // import pay_in  from './api/payment_intents'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CheckoutForm = ({\n  price,\n  onSuccessfulCheckout\n}) => {\n  _s();\n\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = ev => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const billingDetails = {\n      name: e.target.name.value,\n      email: e.target.email.value,\n      address: {\n        city: e.target.city.value,\n        line1: e.target.address.value,\n        state: e.target.state.value,\n        postal_code: e.target.zip.value\n      }\n    };\n    setProcessingTo(true);\n    const cardElement = elements.getElement('card');\n\n    try {\n      const {\n        data: clientSecret\n      } = await axios.post(\"/api/payment_intents\", // { payment_intents },\n      {\n        amount: price\n      });\n      console.log(clientSecret);\n      const paymentMethodReq = await stripe.createPaymentMethod({\n        type: 'card',\n        card: cardElement,\n        billing_details: billingDetails\n      });\n\n      if (paymentMethodReq.error) {\n        setCheckoutError(paymentMethodReq.error.message);\n        setProcessingTo(false);\n        return;\n      }\n\n      const {\n        error\n      } = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: paymentMethodReq.paymentMethod.id\n      });\n\n      if (error) {\n        setCheckoutError(error.message);\n        setProcessingTo(false);\n        console.log('error ');\n        return;\n      }\n\n      onSuccessfulCheckout();\n    } catch (err) {\n      setCheckoutError(err.message);\n    }\n  };\n\n  const cardElementOpts = {\n    hidePostalCode: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutTitle, {\n        children: \"Pay with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BillingDetailsFields, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardElementContainer, {\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          option: cardElementOpts,\n          onChange: handleCardDetailsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rule, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cancellation policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cancel within 24 hour and get a full refund, minus the first night and service fee. Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our Extenuating Circumstance policy does not cover travel disruptions caused by COVID-19. Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notice, {\n        children: \"By selecting the button below, I agree to the Host's House Rules, Airbnb's COVID-19 Safety Requirements, and the Guest Refund Policy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PayBtn, {\n        disabled: isProcessing || !stripe,\n        children: isProcessing ? 'Processing...' : `Confirm and Pay`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n_c2 = CardElementContainer;\nconst CheckoutTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  padding: 1rem 0;\n`;\n_c3 = CheckoutTitle;\nconst Rule = styled.div`\n  padding-top: 2rem;\n  h1 {\n    border-top: 1px solid #dddddd;\n    border-bottom: 1px solid #dddddd;\n\n    padding: 2rem 0;\n  }\n\n  p {\n    padding: 2rem 0;\n  }\n`;\n_c4 = Rule;\nconst Notice = styled.div`\n  border-top: 1px solid #dddddd;\n  font-size: 1rem;\n  padding: 1rem 0;\n`;\n_c5 = Notice;\nconst PayBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5rem;\n  border-radius: 10px;\n  background: rgb(244, 44, 85);\n`;\n_c6 = PayBtn;\nexport default CheckoutForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"CardElementContainer\");\n$RefreshReg$(_c3, \"CheckoutTitle\");\n$RefreshReg$(_c4, \"Rule\");\n$RefreshReg$(_c5, \"Notice\");\n$RefreshReg$(_c6, \"PayBtn\");","map":{"version":3,"sources":["C:/Developing/portfolios/bnb_clone/client/src/payment/CheckoutForm.js"],"names":["React","useState","CardElement","useStripe","useElements","BillingDetailsFields","axios","styled","CheckoutForm","price","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","stripe","elements","handleCardDetailsChange","ev","error","message","handleFormSubmit","e","preventDefault","billingDetails","name","target","value","email","address","city","line1","state","postal_code","zip","cardElement","getElement","data","clientSecret","post","amount","console","log","paymentMethodReq","createPaymentMethod","type","card","billing_details","confirmCardPayment","payment_method","paymentMethod","id","err","cardElementOpts","hidePostalCode","CardElementContainer","div","CheckoutTitle","h1","Rule","Notice","PayBtn","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport BillingDetailsFields from './BillingDetailForm';\nimport axios from 'axios';\nimport styled from 'styled-components';\n// import pay_in  from './api/payment_intents'\n\nconst CheckoutForm = ({ price, onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = ev => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    const billingDetails = {\n      name: e.target.name.value,\n      email: e.target.email.value,\n      address: {\n        city: e.target.city.value,\n        line1: e.target.address.value,\n        state: e.target.state.value,\n        postal_code: e.target.zip.value,\n      },\n    };\n\n    setProcessingTo(true);\n    const cardElement = elements.getElement('card');\n\n    try {\n    const { data: clientSecret } = await axios.post(\"/api/payment_intents\",\n      // { payment_intents },\n      {amount: price}\n    );\n    console.log(clientSecret);\n\n    const paymentMethodReq = await stripe.createPaymentMethod({\n      type: 'card',\n      card: cardElement,\n      billing_details: billingDetails,\n    });\n\n    if (paymentMethodReq.error) {\n      setCheckoutError(paymentMethodReq.error.message);\n      setProcessingTo(false);\n      return;\n    }\n\n    const { error } = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: paymentMethodReq.paymentMethod.id,\n    });\n\n    if (error) {\n      setCheckoutError(error.message);\n      setProcessingTo(false);\n      console.log('error ')\n      return;\n    }\n\n    onSuccessfulCheckout();\n    } catch (err) {\n      setCheckoutError(err.message);\n    }\n  };\n  const cardElementOpts = {\n    hidePostalCode: true,\n  };\n  return (\n    <form  onSubmit={handleFormSubmit}>\n      <div>\n        <CheckoutTitle>Pay with</CheckoutTitle>\n        <BillingDetailsFields />\n      </div>\n      <div>\n        <CardElementContainer>\n          <CardElement\n            option={cardElementOpts}\n            onChange={handleCardDetailsChange}\n          />\n        </CardElementContainer>\n      </div>\n      <Rule>\n        <h1>Cancellation policy</h1>\n        <p>\n          Cancel within 24 hour and get a full refund, minus the first night and\n          service fee. Learn more\n        </p>\n        <p>\n          Our Extenuating Circumstance policy does not cover travel disruptions\n          caused by COVID-19. Learn more\n        </p>\n        <Notice>\n          By selecting the button below, I agree to the Host's House Rules,\n          Airbnb's COVID-19 Safety Requirements, and the Guest Refund Policy.\n        </Notice>\n        {/* <Payment /> */}\n      </Rule>\n      <div>\n        {/* TIP always disable your submit button while processing payments */}\n        <PayBtn disabled={isProcessing || !stripe}>\n          {isProcessing ? 'Processing...' : `Confirm and Pay`}\n        </PayBtn>\n      </div>\n    </form>\n  );\n};\n\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst CheckoutTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  padding: 1rem 0;\n`;\nconst Rule = styled.div`\n  padding-top: 2rem;\n  h1 {\n    border-top: 1px solid #dddddd;\n    border-bottom: 1px solid #dddddd;\n\n    padding: 2rem 0;\n  }\n\n  p {\n    padding: 2rem 0;\n  }\n`;\n\nconst Notice = styled.div`\n  border-top: 1px solid #dddddd;\n  font-size: 1rem;\n  padding: 1rem 0;\n`;\n\nconst PayBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5rem;\n  border-radius: 10px;\n  background: rgb(244, 44, 85);\n`;\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}