{"ast":null,"code":"import Stripe from 'stripe-js';\nconst stripe = new Stripe(process.env.SECRET_KEY);\n\nconst PaymentInten = async (req, res) => {\n  if (req.method === 'POST') {\n    try {\n      const {\n        amount\n      } = req.body;\n      const paymentIntent = await stripe.paymentIntents.create({\n        amount,\n        currency: 'usd'\n      });\n      res.status(200).send(paymentIntent.client_secret);\n    } catch (err) {\n      res.status(500).json({\n        statusCode: 500,\n        message: err.message\n      });\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n};\n\n_c = PaymentInten;\nexport default PaymentInten;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentInten\");","map":{"version":3,"sources":["C:/Developing/portfolios/bnb_clone/client/src/payment/api/payment_intents.js"],"names":["Stripe","stripe","process","env","SECRET_KEY","PaymentInten","req","res","method","amount","body","paymentIntent","paymentIntents","create","currency","status","send","client_secret","err","json","statusCode","message","setHeader","end"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AAEA,MAAMC,MAAM,GAAG,IAAID,MAAJ,CAAWE,OAAO,CAACC,GAAR,CAAYC,UAAvB,CAAf;;AAEA,MAAMC,YAAY,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAkB;AAErC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAaH,GAAG,CAACI,IAAvB;AACA,YAAMC,aAAa,GAAG,MAAMV,MAAM,CAACW,cAAP,CAAsBC,MAAtB,CAA6B;AACvDJ,QAAAA,MADuD;AAEvDK,QAAAA,QAAQ,EAAE;AAF6C,OAA7B,CAA5B;AAIAP,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,aAAa,CAACM,aAAnC;AACD,KAPD,CAOE,OAAOC,GAAP,EAAY;AACZX,MAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBI,IAAhB,CAAqB;AAAEC,QAAAA,UAAU,EAAE,GAAd;AAAmBC,QAAAA,OAAO,EAAEH,GAAG,CAACG;AAAhC,OAArB;AACD;AACF,GAXD,MAWO;AACLd,IAAAA,GAAG,CAACe,SAAJ,CAAc,OAAd,EAAuB,MAAvB;AACAf,IAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBQ,GAAhB,CAAoB,oBAApB;AACD;AACF,CAjBD;;KAAMlB,Y;AAkBN,eAAeA,YAAf","sourcesContent":["import Stripe from 'stripe-js';\n\nconst stripe = new Stripe(process.env.SECRET_KEY);\n\nconst PaymentInten = async (req, res)=>{\n\n  if (req.method === 'POST') {\n    try {\n      const { amount } = req.body;\n      const paymentIntent = await stripe.paymentIntents.create({\n        amount,\n        currency: 'usd',\n      });\n      res.status(200).send(paymentIntent.client_secret);\n    } catch (err) {\n      res.status(500).json({ statusCode: 500, message: err.message });\n    }\n  } else {\n    res.setHeader('Allow', 'POST');\n    res.status(405).end('Method Not Allowed');\n  }\n};\nexport default PaymentInten"]},"metadata":{},"sourceType":"module"}