{"ast":null,"code":"// import Stripe from 'stripe';\n// const stripe = new Stripe(process.env.SECRET_KEY);\n// export default async (req, res) => {\n//   if (req.method === 'POST') {\n//     try {\n//       const { amount } = req.body;\n//       // Psst. For production-ready applications we recommend not using the\n//       // amount directly from the client without verifying it first. This is to\n//       // prevent bad actors from changing the total amount on the client before\n//       // it gets sent to the server. A good approach is to send the quantity of\n//       // a uniquely identifiable product and calculate the total price server-side.\n//       // Then, you would only fulfill orders using the quantity you charged for.\n//       const paymentIntent = await stripe.paymentIntents.create({\n//         amount,\n//         currency: 'usd',\n//       });\n//       res.status(200).send(paymentIntent.client_secret);\n//     } catch (err) {\n//       res.status(500).json({ statusCode: 500, message: err.message });\n//     }\n//   } else {\n//     res.setHeader('Allow', 'POST');\n//     res.status(405).end('Method Not Allowed');\n//   }\n// };","map":{"version":3,"sources":["C:/Developing/portfolios/bnb_clone/client/src/payment/api/payment_intents.js"],"names":[],"mappings":"AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import Stripe from 'stripe';\n\n// const stripe = new Stripe(process.env.SECRET_KEY);\n\n// export default async (req, res) => {\n//   if (req.method === 'POST') {\n//     try {\n//       const { amount } = req.body;\n//       // Psst. For production-ready applications we recommend not using the\n//       // amount directly from the client without verifying it first. This is to\n//       // prevent bad actors from changing the total amount on the client before\n//       // it gets sent to the server. A good approach is to send the quantity of\n//       // a uniquely identifiable product and calculate the total price server-side.\n//       // Then, you would only fulfill orders using the quantity you charged for.\n\n//       const paymentIntent = await stripe.paymentIntents.create({\n//         amount,\n//         currency: 'usd',\n//       });\n\n//       res.status(200).send(paymentIntent.client_secret);\n//     } catch (err) {\n//       res.status(500).json({ statusCode: 500, message: err.message });\n//     }\n//   } else {\n//     res.setHeader('Allow', 'POST');\n//     res.status(405).end('Method Not Allowed');\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}