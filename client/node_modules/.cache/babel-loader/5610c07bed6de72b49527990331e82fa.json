{"ast":null,"code":"var _jsxFileName = \"C:\\\\Developing\\\\portfolios\\\\bnb_clone\\\\client\\\\src\\\\payment\\\\CheckoutForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport BillingDetailsFields from './BillingDetailForm';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Stripe from 'stripe';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripe = new Stripe(process.env.SECRET_KEY);\n\nconst CheckoutForm = ({\n  price,\n  onSuccessfulCheckout\n}) => {\n  _s();\n\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = ev => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n\n  const handleFormSubmit = async e => {\n    const form = document.querySelector('form');\n    const cardElement = elements.getElement('card');\n    e.preventDefault();\n    Stripe.createToken(cardElement).then(res => {\n      if (res.error) console.log('error');else {\n        console.log(res.token); // stripeToKoenHandler(res.token); \n\n        const billingDetails = {\n          name: e.target.name.value,\n          email: e.target.email.value,\n          address: {\n            city: e.target.city.value,\n            line1: e.target.address.value,\n            state: e.target.state.value,\n            postal_code: e.target.zip.value\n          }\n        };\n        form.appendChilde(billingDetails);\n      }\n    });\n    setProcessingTo(true);\n  }; // const handleFormSubmit = async e => {\n  //   e.preventDefault();\n  // const billingDetails = {\n  //   name: e.target.name.value,\n  //   email: e.target.email.value,\n  //   address: {\n  //     city: e.target.city.value,\n  //     line1: e.target.address.value,\n  //     state: e.target.state.value,\n  //     postal_code: e.target.zip.value,\n  //   },\n  // };\n  //   setProcessingTo(true);\n  //   const cardElement = elements.getElement('card');\n  //   try {\n  //   const { data: clientSecret } = await axios.post(\"/api/payment_intents\",\n  //     // { payment_intents },\n  //     {amount: price}\n  //   );\n  //   console.log(clientSecret);\n  //   const paymentMethodReq = await stripe.createPaymentMethod({\n  //     type: 'card',\n  //     card: cardElement,\n  //     billing_details: billingDetails,\n  //   });\n  //   if (paymentMethodReq.error) {\n  //     setCheckoutError(paymentMethodReq.error.message);\n  //     setProcessingTo(false);\n  //     return;\n  //   }\n  //   const { error } = await stripe.confirmCardPayment(clientSecret, {\n  //     payment_method: paymentMethodReq.paymentMethod.id,\n  //   });\n  //   if (error) {\n  //     setCheckoutError(error.message);\n  //     setProcessingTo(false);\n  //     return;\n  //   }\n  //   onSuccessfulCheckout();\n  //   } catch (err) {\n  //     setCheckoutError(err.message);\n  //   }\n  // };\n\n\n  const cardElementOpts = {\n    hidePostalCode: true\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleFormSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutTitle, {\n        children: \"Pay with\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BillingDetailsFields, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CardElementContainer, {\n        children: /*#__PURE__*/_jsxDEV(CardElement, {\n          option: cardElementOpts,\n          onChange: handleCardDetailsChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Rule, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Cancellation policy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cancel within 24 hour and get a full refund, minus the first night and service fee. Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Our Extenuating Circumstance policy does not cover travel disruptions caused by COVID-19. Learn more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notice, {\n        children: \"By selecting the button below, I agree to the Host's House Rules, Airbnb's COVID-19 Safety Requirements, and the Guest Refund Policy.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(PayBtn, {\n        disabled: isProcessing || !stripe,\n        children: isProcessing ? 'Processing...' : `Confirm and Pay`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CheckoutForm, \"2xw3RUxwBWLOQjltidPO4c7nnLg=\", false, function () {\n  return [useStripe, useElements];\n});\n\n_c = CheckoutForm;\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n_c2 = CardElementContainer;\nconst CheckoutTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  padding: 1rem 0;\n`;\n_c3 = CheckoutTitle;\nconst Rule = styled.div`\n  padding-top: 2rem;\n  h1 {\n    border-top: 1px solid #dddddd;\n    border-bottom: 1px solid #dddddd;\n\n    padding: 2rem 0;\n  }\n\n  p {\n    padding: 2rem 0;\n  }\n`;\n_c4 = Rule;\nconst Notice = styled.div`\n  border-top: 1px solid #dddddd;\n  font-size: 1rem;\n  padding: 1rem 0;\n`;\n_c5 = Notice;\nconst PayBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5rem;\n  border-radius: 10px;\n  background: rgb(244, 44, 85);\n`;\n_c6 = PayBtn;\nexport default CheckoutForm;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"CheckoutForm\");\n$RefreshReg$(_c2, \"CardElementContainer\");\n$RefreshReg$(_c3, \"CheckoutTitle\");\n$RefreshReg$(_c4, \"Rule\");\n$RefreshReg$(_c5, \"Notice\");\n$RefreshReg$(_c6, \"PayBtn\");","map":{"version":3,"sources":["C:/Developing/portfolios/bnb_clone/client/src/payment/CheckoutForm.js"],"names":["React","useState","CardElement","useStripe","useElements","BillingDetailsFields","axios","styled","Stripe","stripe","process","env","SECRET_KEY","CheckoutForm","price","onSuccessfulCheckout","isProcessing","setProcessingTo","checkoutError","setCheckoutError","elements","handleCardDetailsChange","ev","error","message","handleFormSubmit","e","form","document","querySelector","cardElement","getElement","preventDefault","createToken","then","res","console","log","token","billingDetails","name","target","value","email","address","city","line1","state","postal_code","zip","appendChilde","cardElementOpts","hidePostalCode","CardElementContainer","div","CheckoutTitle","h1","Rule","Notice","PayBtn","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport BillingDetailsFields from './BillingDetailForm';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport Stripe from 'stripe';\n\nconst stripe = new Stripe(process.env.SECRET_KEY);\n\nconst CheckoutForm = ({ price, onSuccessfulCheckout }) => {\n  const [isProcessing, setProcessingTo] = useState(false);\n  const [checkoutError, setCheckoutError] = useState();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const handleCardDetailsChange = ev => {\n    ev.error ? setCheckoutError(ev.error.message) : setCheckoutError();\n  };\n\n  const handleFormSubmit = async e =>{\n    const form = document.querySelector('form');\n    const cardElement = elements.getElement('card');\n    e.preventDefault(); \n    Stripe.createToken(cardElement).then(res=>{\n      if(res.error) console.log('error');\n      else{\n        console.log(res.token)\n        // stripeToKoenHandler(res.token); \n        const billingDetails = {\n          name: e.target.name.value,\n          email: e.target.email.value,\n          address: {\n            city: e.target.city.value,\n            line1: e.target.address.value,\n            state: e.target.state.value,\n            postal_code: e.target.zip.value,\n          },\n        };\n        form.appendChilde(billingDetails);\n      }\n    })\n    setProcessingTo(true)\n    \n\n  }\n  // const handleFormSubmit = async e => {\n  //   e.preventDefault();\n    // const billingDetails = {\n    //   name: e.target.name.value,\n    //   email: e.target.email.value,\n    //   address: {\n    //     city: e.target.city.value,\n    //     line1: e.target.address.value,\n    //     state: e.target.state.value,\n    //     postal_code: e.target.zip.value,\n    //   },\n    // };\n\n  //   setProcessingTo(true);\n\n  //   const cardElement = elements.getElement('card');\n\n  //   try {\n  //   const { data: clientSecret } = await axios.post(\"/api/payment_intents\",\n  //     // { payment_intents },\n  //     {amount: price}\n  //   );\n  //   console.log(clientSecret);\n\n  //   const paymentMethodReq = await stripe.createPaymentMethod({\n  //     type: 'card',\n  //     card: cardElement,\n  //     billing_details: billingDetails,\n  //   });\n\n  //   if (paymentMethodReq.error) {\n  //     setCheckoutError(paymentMethodReq.error.message);\n  //     setProcessingTo(false);\n  //     return;\n  //   }\n\n  //   const { error } = await stripe.confirmCardPayment(clientSecret, {\n  //     payment_method: paymentMethodReq.paymentMethod.id,\n  //   });\n\n  //   if (error) {\n  //     setCheckoutError(error.message);\n  //     setProcessingTo(false);\n  //     return;\n  //   }\n\n  //   onSuccessfulCheckout();\n  //   } catch (err) {\n  //     setCheckoutError(err.message);\n  //   }\n  // };\n  const cardElementOpts = {\n    hidePostalCode: true,\n  };\n  return (\n    <form  onSubmit={handleFormSubmit}>\n      <div>\n        <CheckoutTitle>Pay with</CheckoutTitle>\n        <BillingDetailsFields />\n      </div>\n      <div>\n        <CardElementContainer>\n          <CardElement\n            option={cardElementOpts}\n            onChange={handleCardDetailsChange}\n          />\n        </CardElementContainer>\n      </div>\n      <Rule>\n        <h1>Cancellation policy</h1>\n        <p>\n          Cancel within 24 hour and get a full refund, minus the first night and\n          service fee. Learn more\n        </p>\n        <p>\n          Our Extenuating Circumstance policy does not cover travel disruptions\n          caused by COVID-19. Learn more\n        </p>\n        <Notice>\n          By selecting the button below, I agree to the Host's House Rules,\n          Airbnb's COVID-19 Safety Requirements, and the Guest Refund Policy.\n        </Notice>\n        {/* <Payment /> */}\n      </Rule>\n      <div>\n        {/* TIP always disable your submit button while processing payments */}\n        <PayBtn disabled={isProcessing || !stripe}>\n          {isProcessing ? 'Processing...' : `Confirm and Pay`}\n        </PayBtn>\n      </div>\n    </form>\n  );\n};\n\nconst CardElementContainer = styled.div`\n  height: 40px;\n  display: flex;\n  align-items: center;\n\n  & .StripeElement {\n    width: 100%;\n    padding: 15px;\n  }\n`;\n\nconst CheckoutTitle = styled.h1`\n  font-size: 2rem;\n  font-weight: 600;\n  padding: 1rem 0;\n`;\nconst Rule = styled.div`\n  padding-top: 2rem;\n  h1 {\n    border-top: 1px solid #dddddd;\n    border-bottom: 1px solid #dddddd;\n\n    padding: 2rem 0;\n  }\n\n  p {\n    padding: 2rem 0;\n  }\n`;\n\nconst Notice = styled.div`\n  border-top: 1px solid #dddddd;\n  font-size: 1rem;\n  padding: 1rem 0;\n`;\n\nconst PayBtn = styled.button`\n  width: 200px;\n  height: 50px;\n  color: white;\n  font-weight: bold;\n  font-size: 1.5rem;\n  border-radius: 10px;\n  background: rgb(244, 44, 85);\n`;\n\nexport default CheckoutForm;\n"]},"metadata":{},"sourceType":"module"}