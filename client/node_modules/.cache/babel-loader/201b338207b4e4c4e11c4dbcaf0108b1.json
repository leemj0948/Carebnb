{"ast":null,"code":"var _jsxFileName = \"C:\\\\Developing\\\\portfolios\\\\bnb_clone\\\\client\\\\src\\\\Map\\\\Component\\\\Mymap.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\n\nconst Mymap = props => {\n  _s();\n\n  useEffect(() => {\n    const container = document.getElementById('myMap');\n    const options = {\n      center: new kakao.maps.LatLng(37.55477729337783, 126.97564531140856),\n      level: 10\n    };\n    const map = new kakao.maps.Map(container, options); //마커이미지\n\n    let markerImgSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png';\n    let imageSize = new kakao.maps.Size(64, 69);\n    let imageOption = {\n      offset: new kakao.maps.Point(27, 69)\n    };\n    let markerImage = new kakao.maps.MarkerImage(markerImgSrc, imageSize, imageOption); //마커 클러스터러\n\n    const clusterer = new kakao.maps.MarkerClusterer({\n      map: map,\n      averageCenter: true,\n      minLevel: 10,\n      disableClickZoom: true\n    });\n    fetch('./data/Cluster.json').then(res => res.json()).then(data => {\n      let markers = data.positions.map(function (position) {\n        return new kakao.maps.Marker({\n          position: new kakao.maps.LatLng(position.lat, position.lng),\n          image: markerImage\n        });\n      });\n      clusterer.addMarkers(markers);\n    });\n    kakao.maps.event.addListener(clusterer, 'clusterclick', function (cluster) {\n      let level = map.getLevel() - 1;\n      clusterer.setStyles([{\n        width: '40px',\n        height: '40px',\n        background: 'black',\n        color: '#fff',\n        textAlign: 'center',\n        lineHeight: '40px',\n        borderRadius: '50px'\n      }, {\n        width: '60px',\n        height: '60px',\n        background: 'white',\n        color: 'blue',\n        border: '1px solid blue',\n        textAlign: 'center',\n        lineHeight: '60px',\n        borderRadius: '60px'\n      }]);\n      clusterer.redraw();\n      map.setLevel(level, {\n        anchor: cluster.getCenter()\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Background, {\n    children: /*#__PURE__*/_jsxDEV(Mymaps, {\n      id: \"myMap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Mymap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Mymap;\nconst Background = styled.div`\n  position: relative;\n  width: 100vw;\n`;\n_c2 = Background;\nconst Mymaps = styled.span`\n  position: absolute;\n  top: -20vw;\n  right: 10px;\n  width: 50vw;\n  height: 600px;\n`;\n_c3 = Mymaps;\nexport default Mymap;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Mymap\");\n$RefreshReg$(_c2, \"Background\");\n$RefreshReg$(_c3, \"Mymaps\");","map":{"version":3,"sources":["C:/Developing/portfolios/bnb_clone/client/src/Map/Component/Mymap.js"],"names":["React","useEffect","styled","kakao","window","Mymap","props","container","document","getElementById","options","center","maps","LatLng","level","map","Map","markerImgSrc","imageSize","Size","imageOption","offset","Point","markerImage","MarkerImage","clusterer","MarkerClusterer","averageCenter","minLevel","disableClickZoom","fetch","then","res","json","data","markers","positions","position","Marker","lat","lng","image","addMarkers","event","addListener","cluster","getLevel","setStyles","width","height","background","color","textAlign","lineHeight","borderRadius","border","redraw","setLevel","anchor","getCenter","Background","div","Mymaps","span"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst { kakao } = window;\nconst Mymap = props => {\n  useEffect(() => {\n    const container = document.getElementById('myMap');\n    const options = {\n      center: new kakao.maps.LatLng(37.55477729337783, 126.97564531140856),\n      level: 10,\n    };\n    const map = new kakao.maps.Map(container, options);\n    //마커이미지\n    let markerImgSrc =\n      'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png';\n    let imageSize = new kakao.maps.Size(64, 69);\n    let imageOption = { offset: new kakao.maps.Point(27, 69) };\n    let markerImage = new kakao.maps.MarkerImage(\n      markerImgSrc,\n      imageSize,\n      imageOption\n    );\n\n    //마커 클러스터러\n    const clusterer = new kakao.maps.MarkerClusterer({\n      map: map,\n      averageCenter: true,\n      minLevel: 10,\n      disableClickZoom: true,\n    });\n\n    fetch('./data/Cluster.json')\n      .then(res => res.json())\n      .then(data => {\n        let markers = data.positions.map(function (position) {\n          return new kakao.maps.Marker({\n            position: new kakao.maps.LatLng(position.lat, position.lng),\n            image: markerImage,\n          });\n        });\n        clusterer.addMarkers(markers);\n      });\n    kakao.maps.event.addListener(clusterer, 'clusterclick', function (cluster) {\n      let level = map.getLevel() - 1;\n      clusterer.setStyles([\n        {\n          width: '40px',\n          height: '40px',\n          background: 'black',\n          color: '#fff',\n          textAlign: 'center',\n          lineHeight: '40px',\n          borderRadius: '50px',\n        },\n        {\n          width: '60px',\n          height: '60px',\n          background: 'white',\n          color: 'blue',\n          border: '1px solid blue',\n          textAlign: 'center',\n          lineHeight: '60px',\n          borderRadius: '60px',\n        },\n      ]);\n\n      clusterer.redraw();\n      map.setLevel(level, { anchor: cluster.getCenter() });\n    });\n  }, []);\n  return (\n    <Background>\n      <Mymaps id=\"myMap\"></Mymaps>\n    </Background>\n  );\n};\nconst Background = styled.div`\n  position: relative;\n  width: 100vw;\n`;\n\nconst Mymaps = styled.span`\n  position: absolute;\n  top: -20vw;\n  right: 10px;\n  width: 50vw;\n  height: 600px;\n`;\n\nexport default Mymap;\n"]},"metadata":{},"sourceType":"module"}